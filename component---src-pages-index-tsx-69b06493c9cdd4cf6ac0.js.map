{"version":3,"sources":["webpack:///./src/components/Intro/intro.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Posts/posts.tsx","webpack:///./src/components/Utils/dateInEnglish.tsx","webpack:///./src/components/Utils/truncateText.tsx"],"names":["Intro","props","className","siteTitle","siteDescription","IndexPage","site","useStaticQuery","title","siteMetadata","description","siteAuthor","author","Posts","data","allMdx","usePostQuery","edges","map","post","i","key","to","node","slug","frontmatter","dateInEnglish","date","length","truncateText","rawBody","style","textAlign","marginTop","color","months","dateArr","split","parseInt","text","slice"],"mappings":"yOAIe,SAASA,EAAMC,GAC7B,OAAKA,EAGJ,6BAASC,UAAU,SAElB,wBAAIA,UAAU,iBACXD,EAAME,WAAiC,KAApBF,EAAME,UAExBF,EAAME,UAFR,aAIF,wBAAID,UAAU,oBACXD,EAAMG,iBAA6C,KAA1BH,EAAMG,gBAE9BH,EAAMG,gBAFR,cAXe,gD,gBCIL,SAASC,EAAUJ,GAAO,IAChCK,EAASC,yBAAe,YAAxBD,KAcR,OACC,kBAAC,IAAD,KAEC,kBAAC,IAAD,CAAKE,MAAM,cACX,kBAACR,EAAD,CACCG,UAAWG,EAAKG,aAAaD,MAC7BJ,gBAAiBE,EAAKG,aAAaC,YACnCC,WAAYL,EAAKG,aAAaG,SAE/B,kBAAC,IAAD,S,kCCjCH,yGAQe,SAASC,EAAT,GAAyB,EAARC,KAAQ,IACjCC,EAASC,IACf,OAAKD,EAOJ,oCACC,6BAASb,UAAU,SAClB,wBAAIA,UAAU,iBAAd,SACCa,EAAOE,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACjB,yBAAKlB,UAAU,OAAOmB,IAAKD,GAC1B,kBAAC,OAAD,CAAME,GAAE,IAAMH,EAAKI,KAAKC,KAAQtB,UAAU,kBACzC,wBAAIA,UAAU,eAAeiB,EAAKI,KAAKE,YAAYjB,OACnD,wBAAIN,UAAU,cACZwB,YAAcP,EAAKI,KAAKE,YAAYE,QAGvC,yBAAKzB,UAAU,qBACbiB,EAAKI,KAAKE,YAAYf,YAAYkB,OAAS,EACzCC,YAAaV,EAAKI,KAAKE,YAAYf,YAAa,KAChDmB,YAAaV,EAAKI,KAAKO,QAAS,MAEpC,kBAAC,OAAD,CAAMR,GAAE,IAAMH,EAAKI,KAAKC,KAAQtB,UAAU,kBAA1C,mBArBH,wBAAI6B,MAAO,CAAEC,UAAW,SAAUC,UAAW,OAAQC,MAAO,SAA5D,mBA+BI,IAAMlB,EAAe,WAwB3B,OAtBmBT,yBAAe,cAA1BQ,S,yDC7CT,sCAAMoB,EAAS,CACd,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGc,SAAST,EAAcC,GACrC,IAAIS,EAKJ,OAJAA,EAAUT,EAAKU,MAAM,KACEC,SAASF,EAAQ,IAAvB,IAChBD,EAAOG,SAASF,EAAQ,IAAM,GADd,KAEZA,EAAQ,K,kCCpBC,SAASP,EAAaU,EAAMX,GAC1C,OAAIW,EAAKX,QAAUA,EACXW,EAEAA,EAAKC,MAAM,EAAGZ,GAAU,MAJjC","file":"component---src-pages-index-tsx-69b06493c9cdd4cf6ac0.js","sourcesContent":["import React from \"react\"\n\nimport \"./intro.scss\"\n\nexport default function Intro(props) {\n\tif (!props) return <div>Props are empty</div>\n\n\treturn (\n\t\t<section className=\"Intro\">\n\t\t\t{/* Set title and desc in gatsby-config.js under \"siteMetadata\" */}\n\t\t\t<h1 className=\"Intro__header\">\n\t\t\t\t{!props.siteTitle || props.siteTitle === \"\"\n\t\t\t\t\t? `Undefined`\n\t\t\t\t\t: props.siteTitle}\n\t\t\t</h1>\n\t\t\t<h4 className=\"Intro__subheader\">\n\t\t\t\t{!props.siteDescription || props.siteDescription === \"\"\n\t\t\t\t\t? `Undefined`\n\t\t\t\t\t: props.siteDescription}\n\t\t\t</h4>\n\t\t</section>\n\t)\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout/layout\"\nimport SEO from \"../components/Utils/seo\"\nimport Intro from \"../components/Intro/intro\"\nimport Posts from \"../components/Posts/posts\"\n\nexport default function IndexPage(props) {\n\tconst { site } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\tauthor\n\t\t\t\t\t\tdescription\n            title\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t)\n\n\treturn (\n\t\t<Layout>\n\t\t\t{/* siteTitle specifies that the title will the siteTitle alone */}\n\t\t\t<SEO title=\"siteTitle\" />\n\t\t\t<Intro\n\t\t\t\tsiteTitle={site.siteMetadata.title}\n\t\t\t\tsiteDescription={site.siteMetadata.description}\n\t\t\t\tsiteAuthor={site.siteMetadata.author}\n\t\t\t/>\n\t\t\t<Posts />\n\t\t</Layout>\n\t)\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport dateInEnglish from \"../Utils/dateInEnglish\"\nimport truncateText from \"../Utils/truncateText\"\n\nimport \"./posts.scss\"\n\nexport default function Posts({ data }) {\n\tconst allMdx = usePostQuery()\n\tif (!allMdx)\n\t\treturn (\n\t\t\t<h2 style={{ textAlign: \"center\", marginTop: \"50px\", color: \"gray\" }}>\n\t\t\t\tNo posts found.\n\t\t\t</h2>\n\t\t)\n\treturn (\n\t\t<>\n\t\t\t<section className=\"Posts\">\n\t\t\t\t<h2 className=\"Posts__banner\">Posts</h2>\n\t\t\t\t{allMdx.edges.map((post, i) => (\n\t\t\t\t\t<div className=\"Post\" key={i}>\n\t\t\t\t\t\t<Link to={`/${post.node.slug}`} className=\"Post__metainfo\">\n\t\t\t\t\t\t\t<h3 className=\"Post__title\">{post.node.frontmatter.title}</h3>\n\t\t\t\t\t\t\t<h5 className=\"Post__date\">\n\t\t\t\t\t\t\t\t{dateInEnglish(post.node.frontmatter.date)}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className=\"Post__description\">\n\t\t\t\t\t\t\t{post.node.frontmatter.description.length > 1\n\t\t\t\t\t\t\t\t? truncateText(post.node.frontmatter.description, 265)\n\t\t\t\t\t\t\t\t: truncateText(post.node.rawBody, 265)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link to={`/${post.node.slug}`} className=\"Post__readmore\">\n\t\t\t\t\t\t\tRead more\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport const usePostQuery = () => {\n\t// Fetch latest posts\n\tconst { allMdx } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery FetchRecentPosts {\n\t\t\t\tallMdx(\n\t\t\t\t\tsort: { order: DESC, fields: frontmatter___date }\n\t\t\t\t\tfilter: { fileAbsolutePath: { regex: \"/content/posts/\" } }\n\t\t\t\t) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\trawBody\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t)\n\treturn allMdx\n}\n","const months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n]\n\nexport default function dateInEnglish(date) {\n\tvar dateArr = []\n\tdateArr = date.split(\"-\")\n\tvar dateInEnglish = `${parseInt(dateArr[2])} ${\n\t\tmonths[parseInt(dateArr[1]) - 1]\n\t}, ${dateArr[0]}`\n\treturn dateInEnglish\n}\n","export default function truncateText(text, length) {\n\tif (text.length <= length) {\n\t\treturn text\n\t} else {\n\t\treturn text.slice(0, length) + \"...\"\n\t}\n}\n"],"sourceRoot":""}